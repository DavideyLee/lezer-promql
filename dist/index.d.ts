import { Parser } from 'lezer'

export const parser: Parser
export const matchOpTerms: string[],
    binOpTerms: string[],
    binOpModifierTerms: string[],
    functionIdentifierTerms: string[],
    aggregateOpTerms: string[],
    aggregateOpModifierTerms: string[];
export const
    Bool: number,
    Ignoring: number,
    On: number,
    GroupLeft: number,
    GroupRight: number,
    Offset: number,
    Avg: number,
    Bottomk: number,
    Count: number,
    CountValues: number,
    Group: number,
    Max: number,
    Min: number,
    Quantile: number,
    Stddev: number,
    Stdvar: number,
    Sum: number,
    Topk: number,
    By: number,
    Without: number,
    And: number,
    Or: number,
    Unless: number,
    LineComment: number,
    Expr: number,
    AggregateExpr: number,
    AggregateOp: number,
    AggregateModifier: number,
    GroupingLabels: number,
    GroupingLabelList: number,
    GroupingLabel: number,
    LabelName: number,
    FunctionCallBody: number,
    FunctionCallArgs: number,
    BinaryExpr: number,
    BinModifier: number,
    GroupModifiers: number,
    BoolModifier: number,
    OnOrIgnoring: number,
    MaybeGroupingLabels: number,
    FunctionCall: number,
    FunctionIdentifier: number,
    Identifier: number,
    MatrixSelector: number,
    Duration: number,
    NumberLiteral: number,
    OffsetExpr: number,
    ParenExpr: number,
    StringLiteral: number,
    SubqueryExpr: number,
    UnaryExpr: number,
    UnaryOp: number,
    VectorSelector: number,
    MetricIdentifier: number,
    LabelMatchers: number,
    LabelMatchList: number,
    LabelMatcher: number
